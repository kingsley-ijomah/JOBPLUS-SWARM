name: Build Push Deploy

on:
  push:
    branches:
      - backup

jobs:
  deploy-code:
    runs-on: ubuntu-latest
    env:
      APP_DIR_PATH: /mnt/shared_storage/jobplus-app
      PG_BACKUP_PATH: /mnt/shared_storage/pg-master-backup
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Shallow clone to have only the latest commit
          ref: backup

      - name: Set up SSH Keys Access for Digital Ocean Droplet
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.MANAGER_RESERVED_IP }} >> ~/.ssh/known_hosts

      - name: Copy code to manager node on server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no deployuser@${{ secrets.MANAGER_RESERVED_IP }} "\

          sudo mkdir -p $PG_BACKUP_PATH
          sudo chown -R 9999:9999 $PG_BACKUP_PATH # Set ownership to stolon user by UID
          sudo mkdir -p $APP_DIR_PATH
          sudo chown -R deployuser:deployuser $APP_DIR_PATH

          if [ -d $APP_DIR_PATH/.git ]; then
            git -C $APP_DIR_PATH clean -fd
            git -C $APP_DIR_PATH reset --hard HEAD
            git -C $APP_DIR_PATH fetch --all
            git -C $APP_DIR_PATH checkout backup
            git -C $APP_DIR_PATH pull origin backup
          else
            rm -rf $APP_DIR_PATH/*
            git clone -b backup ${{ secrets.REPO_PAT_URL }} $APP_DIR_PATH
          fi;"

  build-and-push:
    needs: deploy-code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: backup

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Nginx Docker Image
        run: |
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-nginx:latest" -f services/nginx/Dockerfile services/nginx/
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-nginx:latest"

      - name: Build and Push Etcd Image
        run: |
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-etcd:latest" -f services/etcd/Dockerfile services/etcd/
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-etcd:latest"

      - name: Build and Push Stolon Image
        run: |
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-stolon:latest" -f services/stolon/Dockerfile services/stolon/
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-stolon:latest"

      - name: Build and Push PG Backup Image
        run: |
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-pgbackup:latest" -f services/pgbackup/Dockerfile services/pgbackup/
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/jobplus-pgbackup:latest"
    
  deploy-services:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      APP_DIR_PATH: /mnt/shared_storage/jobplus-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: backup
      
      - name: Set up SSH Keys Access for Digital Ocean Droplet
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.MANAGER_RESERVED_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Services Stack
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no deployuser@${{ secrets.MANAGER_RESERVED_IP }} "\
          cd $APP_DIR_PATH && \
          cat docker-compose.yml && \
          docker stack deploy -c docker-compose.yml app_stack"
