version: '3.8'

services:
  consul:
    image: yasilo8240/jobplus-consul:latest
    volumes:
      # - '/mnt/shared_storage/consul-data:/consul-data'
      - console_data:/consul/data
    ports:
      - '8500:8500'  # Expose the Consul UI and API port
      - "8400:8400"
      - "8301-8302:8301-8302"
      - "8301-8302:8301-8302/udp"
      - "8600:8600"
      - "8600:8600/udp"
    networks:
      - shared_swarm_network
    deploy:
      placement:
        constraints: [node.role == manager] # change to worker later if needed
      restart_policy:
        condition: on-failure
    environment:
      CONSUL_BIND_INTERFACE: 'eth0'
      CONSUL_CLIENT_INTERFACE: 'eth0'
    command: "agent -server -ui -bootstrap -client=0.0.0.0 -bind={{ GetInterfaceIP 'eth0' }} -data-dir=/consul/data"

  # Managing Stolon clusters, providing operational control.
  stolon-ctl:
    image: yasilo8240/jobplus-stolon:latest
    depends_on:
      - consul
    environment:
      - ROLE=ctl
    networks:
      - shared_swarm_network
    deploy:
      placement:
        constraints: [node.role == manager]

  # # Runs Stolon Keeper managing PostgreSQL data persistence and replication.
  # stolon-keeper:
  #   image: yasilo8240/jobplus-stolon:latest
  #   depends_on:
  #     - stolon-ctl
  #     - consul
  #   environment:
  #     - ROLE=keeper
  #     - STKEEPER_UID=postgres_{{.Task.ID}}
  #     - PG_REPL_USERNAME=repluser
  #     - PG_REPL_PASSWORD=replpass
  #     - PG_SU_USERNAME=postgres
  #     - PG_SU_PASSWORD=postgres
  #     - PG_APP_USER=jobplus_user
  #     - PG_APP_PASSWORD=mysecurepassword
  #     - PG_APP_DB=jobplus_db
  #   volumes:
  #     - stolon_data:/stolon/data
  #     - pg_data:/var/lib/postgresql/data
  #     - pg_log:/var/log/postgresql
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]

  # # Deploys Stolon Sentinel for monitoring and orchestrating cluster failovers.
  # stolon-sentinel:
  #   image: yasilo8240/jobplus-stolon:latest
  #   environment:
  #     - ROLE=sentinel
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]
  #   depends_on:
  #     - stolon-keeper
  #     - consul

volumes:
  stolon_data:
  console_data:
  pg_data:
  pg_log:

networks:
  shared_swarm_network:
    external: true