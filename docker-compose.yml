version: '3.7'

services:
  consul:
    image: consul:1.9
    command: consul agent -dev -client 0.0.0.0
    ports:
      - "8500:8500"
    deploy:
      placement:
        constraints: [node.role == manager]

  stolon-keeper:
    image: sorintlab/stolon:master-pg12
    depends_on:
      - consul
    command: >
      bash -c "stolonctl --yes --store-backend=consul --store-endpoints=http://consul:8500 init --cluster-name stolon-cluster && exec stolon-keeper --data-dir /stolon/data --cluster-name stolon-cluster --store-backend consul --store-endpoints http://consul:8500 --pg-listen-address '0.0.0.0' --pg-repl-username repluser --pg-repl-password replpass --pg-su-username postgres --pg-su-password postgres --uid keeper0 --pg-bin-path /usr/lib/postgresql/12/bin --pg-port 5435"
    ports:
      - "5432:5432"
    deploy:
      placement:
        constraints: [node.role == manager]


  stolon-sentinel:
    image: sorintlab/stolon:master-pg12
    depends_on:
      - consul
    environment:
      STSENTINEL_CLUSTER_NAME: stolon-cluster
      STSENTINEL_STORE_BACKEND: consul
      STSENTINEL_STORE_ENDPOINTS: consul:8500
    command: stolon-sentinel
    deploy:
      placement:
        constraints: [node.role == manager]

  stolon-proxy:
    image: sorintlab/stolon:master-pg12
    depends_on:
      - consul
    environment:
      STPROXY_CLUSTER_NAME: stolon-cluster
      STPROXY_STORE_BACKEND: consul
      STPROXY_STORE_ENDPOINTS: consul:8500
    ports:
      - "5433:5432"
    command: stolon-proxy
    deploy:
      placement:
        constraints: [node.role == manager]



# version: '3.8'

# services:
#   # nginx:
#   #   image: yasilo8240/jobplus-nginx:latest
#   #   ports:
#   #     - '80:80' # Expose Nginx on port 80
#   #   restart: always
#   #   deploy:
#   #     replicas: 1
#   #     placement:
#   #       constraints: [node.role == worker]
#   #     update_config:
#   #       order: start-first
#   #   networks:
#   #     - shared_swarm_network

#   # visualizer:
#   #   image: dockersamples/visualizer
#   #   # Removed ports: '8500:8080' to not expose directly
#   #   volumes:
#   #     - '/var/run/docker.sock:/var/run/docker.sock'
#   #   networks:
#   #     - shared_swarm_network
#   #   depends_on:
#   #     - nginx
#   #   deploy:
#   #     placement:
#   #       constraints: [node.role == manager]

#   consul:
#     image: yasilo8240/jobplus-consul:latest
#     volumes:
#       # - '/mnt/shared_storage/consul-data:/consul-data'
#       - console_data:/consul/data
#     ports:
#       - '8500:8500'  # Expose the Consul UI and API port
#       - "8400:8400"
#       - "8301-8302:8301-8302"
#       - "8301-8302:8301-8302/udp"
#       - "8600:8600"
#       - "8600:8600/udp"
#     networks:
#       - shared_swarm_network
#     deploy:
#       placement:
#         constraints: [node.role == manager] # change to worker later if needed
#       restart_policy:
#         condition: on-failure
#     environment:
#       CONSUL_BIND_INTERFACE: 'eth0'
#       CONSUL_CLIENT_INTERFACE: 'eth0'
#     command: "agent -server -ui -bootstrap -client=0.0.0.0 -bind={{ GetInterfaceIP 'eth0' }} -data-dir=/consul/data"

#   # Managing Stolon clusters, providing operational control.
#   stolon-ctl:
#     image: yasilo8240/jobplus-stolon-ctl:latest
#     depends_on:
#       - consul
#     networks:
#       - shared_swarm_network
#     deploy:
#       placement:
#         constraints: [node.role == manager]

#   # Runs Stolon Keeper managing PostgreSQL data persistence and replication.
#   stolon-keeper:
#     image: yasilo8240/jobplus-stolon:latest
#     depends_on:
#       - stolon-ctl
#       - consul
#     environment:
#       - ROLE=keeper
#       - STOLONCTL_CLUSTER_NAME=stolon-cluster
#       - STOLONCTL_STORE_BACKEND=consul
#       - STOLONCTL_STORE_URL=http://consul:8500
#       - STKEEPER_DATA_DIR=/stolon/data
#       - PG_REPL_USERNAME=repluser
#       - PG_REPL_PASSWORD=replpass
#       - PG_SU_USERNAME=postgres
#       - PG_SU_PASSWORD=postgres
#       - PG_APP_USER=jobplus_user
#       - PG_APP_PASSWORD=mysecurepassword
#       - PG_APP_DB=jobplus_db
#       - PGDATA=/var/lib/postgresql/data
#     volumes:
#       - stolon_data:/stolon-data
#     networks:
#       - shared_swarm_network
#     deploy:
#       placement:
#         constraints: [node.role == manager]

#   # Deploys Stolon Sentinel for monitoring and orchestrating cluster failovers.
#   stolon-sentinel:
#     image: yasilo8240/jobplus-stolon:latest
#     environment:
#       - ROLE=sentinel
#       - STOLONCTL_CLUSTER_NAME=stolon-cluster
#       - STOLONCTL_STORE_BACKEND=consul
#       - STOLONCTL_STORE_URL=http://consul:8500
#     networks:
#       - shared_swarm_network
#     deploy:
#       placement:
#         constraints: [node.role == manager]
#     depends_on:
#       - stolon-keeper
#       - consul

#   # # Proxies SQL client connections to the appropriate PostgreSQL server.
#   # stolon-proxy:
#   #   image: yasilo8240/jobplus-stolon:latest
#   #   environment:
#   #     - ROLE=proxy
#   #     - STOLONCTL_CLUSTER_NAME=stolon-cluster
#   #     - STOLONCTL_STORE_BACKEND=etcd
#   #     - STOLONCTL_STORE_URL=http://etcd:2379
#   #   ports:
#   #     - '5432:5432'
#   #   depends_on:
#   #     - etcd
#   #   networks:
#   #     - shared_swarm_network

#   # backend:
#   #   image: 'yasilo8240/jobplus-backend:latest'
#   #   environment:
#   #     - NODE_ENV=production
#   #     - PORT=1337
#   #     - HOST=0.0.0.0
#   #     - APP_KEYS=XmOm88QSSfChi2hNVcSjww==,KXVCVy+qMwCPk/X1ABlgeQ==,5KnUwLAkcixG5UZPL51mQA==,Aep9qvWfR0hObanTxa9gTA==
#   #     - API_TOKEN_SALT=eIzblAOhBCQaS+LT8/QLzEjS7TBwcLbMkFifUvftcqk=
#   #     - ADMIN_JWT_SECRET=mthVUkamJ7mWnZPaSWCzsSmm9ZBgtv0h3ajVz7onwvY=
#   #     - TRANSFER_TOKEN_SALT=Lp0yXXBDnlDeN8Cw2f5dN3L3g7rFbwZcT0EB/cCMXj8=
#   #     - JWT_SECRET=GSmNJfgDE/60h0xj1OlaSFBf2sBPRus5fWyprCtdqRQ=

#   #     - DATABASE_CLIENT=postgres
#   #     - DATABASE_HOST=stolon-proxy
#   #     - DATABASE_PORT=5432
#   #     - DATABASE_NAME=jobplus_db
#   #     - DATABASE_USERNAME=jobplus_user
#   #     - DATABASE_PASSWORD=mysecurepassword

#   #     - SENDGRID_API_KEY=example
#   #     - SENDGRID_FROM_EMAIL=exampl@codehance.com
#   #     - POSTMARK_API_KEY=example
#   #     - POSTMARK_FROM_EMAIL=example@codehance.com
#   #   ports:
#   #     - "1337:1337"
#   #   depends_on:
#   #     - stolon-proxy
#   #   deploy:
#   #     replicas: 1
#   #   networks:
#   #     - shared_swarm_network

# volumes:
#   stolon_data:
#   console_data:

# networks:
#   shared_swarm_network:
#     external: true



#   # # etcd container acts as a distributed key-value store for cluster configuration and state management.
#   # etcd:
#   #   image: yasilo8240/jobplus-etcd:latest
#   #   ports:
#   #     - '2379:2379' # For client communication
#   #     - '2380:2380' # For other etcd nodes communication
#   #   volumes:
#   #     # - '/mnt/shared_storage/etcd-data:/etcd-data'
#   #     - etcd-data:/etcd-data
#   #   networks:
#   #     - shared_swarm_network
#   #   deploy:
#   #     placement:
#   #       constraints: [node.role == manager]