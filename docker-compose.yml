version: '3.8'

services:
  nginx:
    image: yasilo8240/jobplus-nginx:latest
    ports:
      - '80:80' # Expose Nginx on port 80
    restart: always
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      update_config:
        order: start-first
    networks:
      - shared_swarm_network

  visualizer:
    image: dockersamples/visualizer
    # Removed ports: '8500:8080' to not expose directly
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - shared_swarm_network
    depends_on:
      - nginx
    deploy:
      placement:
        constraints: [node.role == manager]

  # # etcd container acts as a distributed key-value store for cluster configuration and state management.
  # etcd:
  #   image: yasilo8240/jobplus-etcd:latest
  #   ports:
  #     - '2379:2379' # For client communication
  #     - '2380:2380' # For other etcd nodes communication
  #   volumes:
  #     # - '/mnt/shared_storage/etcd-data:/etcd-data'
  #     - etcd_data:/etcd-data
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]

  # # Managing Stolon clusters, providing operational control.
  # ctl:
  #   image: yasilo8240/jobplus-stolon:latest
  #   environment:
  #     - ROLE=ctl
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]

  # # # Runs Stolon Keeper managing PostgreSQL data persistence and replication.
  # keeper1:
  #   image: yasilo8240/jobplus-stolon:latest
  #   environment:
  #     - ROLE=keeper
  #     - STKEEPER_UID=keeper1
  #     - PG_REPL_USERNAME=repluser
  #     - PG_REPL_PASSWORD=repl_password
  #     - PG_SU_USERNAME=postgres
  #     - PG_SU_PASSWORD=su_password
  #   volumes:
  #     - stolon_keeper1_data:/stolon/data
  #     - stolon_keeper1_pg_data:/var/lib/postgresql/data
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.labels.role == worker1] # Assigns the service to a specific node.

  # keeper2:
  #   image: yasilo8240/jobplus-stolon:latest
  #   environment:
  #     - ROLE=keeper
  #     - STKEEPER_UID=keeper2
  #     - PG_REPL_USERNAME=repluser
  #     - PG_REPL_PASSWORD=repl_password
  #     - PG_SU_USERNAME=postgres
  #     - PG_SU_PASSWORD=su_password
  #   volumes:
  #     - stolon_keeper2_data:/stolon/data
  #     - stolon_keeper2_pg_data:/var/lib/postgresql/data
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.labels.role == worker2] # Assigns the service to a specific node.

  # # Deploys Stolon Sentinel for monitoring and orchestrating cluster failovers.
  # sentinel:
  #   image: yasilo8240/jobplus-stolon:latest
  #   environment:
  #     - ROLE=sentinel
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]

  # # Deploys Stolon Proxy for routing client connections to the right PostgreSQL instance.
  # proxy:
  #   image: yasilo8240/jobplus-stolon:latest
  #   environment:
  #     - ROLE=proxy
  #   networks:
  #     - shared_swarm_network
  #   ports:
  #     - '5432:5432'
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]
  #   depends_on:
  #     - stolon-keeper
  #     - etcd

volumes:
  stolon_keeper1_data:
  stolon_keeper1_pg_data:
  stolon_keeper2_data:
  stolon_keeper2_pg_data:
  etcd_data:

networks:
  shared_swarm_network:
    external: true

