version: '3.8'

services:
  nginx:
    image: yasilo8240/jobplus-nginx:latest
    ports:
      - '80:80' # Expose Nginx on port 80
    restart: always
    deploy:
      replicas: 3
      placement:
        constraints: [node.role == worker]
      update_config:
        order: start-first
    networks:
      - shared_swarm_network

  visualizer:
    image: dockersamples/visualizer
    # Removed ports: '8500:8080' to not expose directly
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - shared_swarm_network
    deploy:
      placement:
        constraints: [node.role == manager]

  # jobplus-postgres:
  #   image: yasilo8240/jobplus-postgres:latest
  #   volumes:
  #     - '/mnt/shared_storage/postgres-data:/var/lib/postgresql/data'
  #   environment:
  #     POSTGRES_USER: jobplus_user
  #     POSTGRES_PASSWORD: D3vB*tWsmP3@6#A!
  #     POSTGRES_DB: jobplus_prod
  #   networks:
  #     - shared_swarm_network
  #   deploy:
  #     placement:
  #       constraints: [node.role == worker]

  etcd:
    image: yasilo8240/jobplus-etcd:latest
    ports:
      - '2379:2379'
    networks:
      - shared_swarm_network
    deploy:
      placement:
        constraints: [node.role == manager]

  patroni:
    user: postgres:postgres
    image: yasilo8240/jobplus-patroni:latest
    ports:
      - '8008:8008'
    volumes:
      - '/mnt/shared_storage/postgres-data:/var/lib/postgresql/data'
    environment:
      PATRONI_NAME: "{{.Service.Name}}-{{.Task.Slot}}"
      PATRONI_SUPERUSER_USERNAME: jobplus_user
      PATRONI_SUPERUSER_PASSWORD: D3vB*tWsmP3@6#A!
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: rep-pass
    networks:
      - shared_swarm_network
    depends_on:
      - etcd
    deploy:
      replicas: 3  # Run three instances for high availability
      placement:
        constraints: [node.role == worker]

networks:
  shared_swarm_network:
    external: true
